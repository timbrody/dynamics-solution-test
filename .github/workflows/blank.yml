# This is a basic workflow to help you get started with Actions

name: CI

env:
  WF_APPLICATION_ID: 5831c8da-3497-439c-9f4e-e33e7c5fc31b
  WF_TENANT_ID: 4a5378f9-29f4-4d3e-be89-669d03ada9d8
  WF_DYNAMICS_URL: 'https://org8858af45.crm11.dynamics.com'

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: aSolution
       #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder:
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/
       
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          lfs: true
        
      - name: who-am-i
        uses: microsoft/powerplatform-actions/who-am-i@0.4.0
        with:
          environment-url: ${{env.WF_DYNAMICS_URL}}
          app-id: ${{env.WF_APPLICATION_ID}}
          tenant-id: ${{env.WF_TENANT_ID}}
          client-secret: ${{secrets.CLIENT_SECRET_GITHUB_ACTIONS}}

      - name: export-solution
        uses: microsoft/powerplatform-actions/export-solution@0.4.0
        with:
          environment-url: ${{env.WF_DYNAMICS_URL}}
          app-id: ${{env.WF_APPLICATION_ID}}
          tenant-id: ${{env.WF_TENANT_ID}}
          client-secret: ${{secrets.CLIENT_SECRET_GITHUB_ACTIONS}}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        
      - name: unpack-solution
        uses: microsoft/powerplatform-actions/unpack-solution@0.4.0
        with:
          solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
          solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
          solution-type: 'Unmanaged'
          overwrite-files: true
        
      - name: branch-solution, prepare it for a PullRequest
        uses: microsoft/powerplatform-actions/branch-solution@0.4.0
        with:
          solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
          solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-empty-commit: true
